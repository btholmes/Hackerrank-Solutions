/*
  Insert Node at the end of a linked list 
  head pointer input could be NULL as well for empty list
  Node is defined as 
  class Node {
     int data;
     Node next;
  }
*/
    // This is a "method-only" submission. 
    // You only need to complete this method. 

void ReversePrint(Node head) {
  // This is a "method-only" submission. 
  // You only need to complete this method. 
    if(head == null)
    {
        return; 
    }
    Stack<Integer> stack = new Stack<Integer>(); 
    Node current = head; 
    while(current != null)
    {
        stack.push(current.data); 
        current = current.next; 
    }
    while(!stack.isEmpty())
    {
        System.out.println(stack.pop()); 
    }
}
